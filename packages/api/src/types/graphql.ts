// This file will be auto-generated by GraphQL Code Generator
// For now, we'll define basic types manually

export interface Resolvers {
  Query: {
    queens: (parent: any, args: any, context: any) => Promise<any>;
    queen: (parent: any, args: any, context: any) => Promise<any>;
    seasons: (parent: any, args: any, context: any) => Promise<any>;
    season: (parent: any, args: any, context: any) => Promise<any>;
    episodes: (parent: any, args: any, context: any) => Promise<any>;
    episode: (parent: any, args: any, context: any) => Promise<any>;
    search: (parent: any, args: any, context: any) => Promise<any>;
  };
  Mutation: {
    updateQueen: (parent: any, args: any, context: any) => Promise<any>;
    updateSeason: (parent: any, args: any, context: any) => Promise<any>;
    updateEpisode: (parent: any, args: any, context: any) => Promise<any>;
  };
  Subscription: {
    seasonUpdated: (parent: any, args: any, context: any) => AsyncIterable<any>;
    newEpisode: (parent: any, args: any, context: any) => AsyncIterable<any>;
  };
}
